name: 'üßê Gemini AI Assistant'

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
      - 'test/shitty-code'

permissions:
  contents: write
  pull-requests: write

jobs:
  #=================================================
  # JOB 1: Summarize commit changes on push to main
  #=================================================
  summarize-push:
    name: 'Summarize Push to Main'
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: 'Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 'Get commit changes'
        id: get-diff
        run: |
          echo "diff<<EOF" >> $GITHUB_OUTPUT
          git diff HEAD~1 HEAD >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 'Generate summary with Gemini'
        id: gemini-summary
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          COMMIT_DIFF: ${{ steps.get-diff.outputs.diff }}
        run: |
          PROMPT="You are an expert programmer. Summarize the following code changes in a few clear, concise bullet points."
          SUMMARY=$(echo "${COMMIT_DIFF}" | npx @google/gemini-cli --prompt "${PROMPT}")
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "${SUMMARY}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # ==> THIS STEP IS UPDATED <==
      - name: 'Post summary as a commit comment'
        uses: actions/github-script@v7
        env:
          SUMMARY_BODY: ${{ steps.gemini-summary.outputs.summary }}
        with:
          script: |
            const body = `### ü§ñ Gemini Summary of Changes\n\n${process.env.SUMMARY_BODY}`;
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: body
            });
            
      - name: 'Post Failure Comment on Commit'
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `‚ùå **Gemini Summary Failed!**\n\nAn error occurred while generating the summary. Please check the [Actions Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.`
            });

  #===================================================
  # JOB 2: Review a pull request opened for main
  #===================================================
  review-pr:
    name: 'Review Pull Request'
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: 'Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 'Get PR diff'
        id: get-pr-diff
        run: |
          gh pr diff ${{ github.event.pull_request.number }} > pr.diff
          echo "diff_path=pr.diff" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 'Generate review with Gemini'
        id: gemini-review
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          PROMPT="You are an expert code reviewer. Analyze the following code changes. Provide feedback on potential bugs, style issues, and maintainability. Structure your response with a brief summary and then bullet points for specific suggestions. Do not comment on license headers."
          REVIEW=$(cat ${{ steps.get-pr-diff.outputs.diff_path }} | npx @google/gemini-cli --prompt "${PROMPT}")
          echo "review<<EOF" >> $GITHUB_OUTPUT
          echo "${REVIEW}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      # ==> THIS STEP IS UPDATED <==
      - name: 'Post review as a PR comment'
        uses: actions/github-script@v7
        env:
          REVIEW_BODY: ${{ steps.gemini-review.outputs.review }}
        with:
          script: |
            const body = `### üßê Gemini Code Review\n\n${process.env.REVIEW_BODY}`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });

      - name: 'Post Failure Comment on PR'
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `‚ùå **Gemini Review Failed!**\n\nAn error occurred during the code review. Please check the [Actions Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.`
            });